AWSTemplateFormatVersion: '2010-09-09'
Description: 'S3 Lambda File Mover - CloudFormation Template'

Parameters:
  SourceBucketName:
    Type: String
    Description: Name of the source S3 bucket
    Default: source-bucket-name
  
  DestinationBucketName:
    Type: String
    Description: Name of the destination S3 bucket
    Default: destination-bucket-name
  
  SourcePrefix:
    Type: String
    Description: Source bucket prefix filter (optional)
    Default: ""
  
  DestinationPrefix:
    Type: String
    Description: Destination bucket prefix (optional)
    Default: ""
  
  LambdaFunctionName:
    Type: String
    Description: Name of the Lambda function
    Default: s3-file-mover
  
  LambdaTimeout:
    Type: Number
    Description: Lambda function timeout in seconds
    Default: 300
    MinValue: 60
    MaxValue: 900
  
  LambdaMemorySize:
    Type: Number
    Description: Lambda function memory size in MB
    Default: 512
    AllowedValues: [128, 256, 512, 1024, 2048, 3008]

Resources:
  # S3 Source Bucket
  SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SourceBucketName
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  # S3 Destination Bucket
  DestinationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DestinationBucketName
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${LambdaFunctionName}-execution-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:PutObjectTagging
                Resource:
                  - !Sub "arn:aws:s3:::${SourceBucket}/*"
                  - !Sub "arn:aws:s3:::${DestinationBucket}/*"

  # Lambda Function
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Runtime: java21
      Handler: com.example.s3lambdafilemover.lambda.S3LambdaHandler::apply
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          // This is a placeholder. You need to upload the actual JAR file
          // using AWS CLI or AWS Console after creating the function.
      Timeout: !Ref LambdaTimeout
      MemorySize: !Ref LambdaMemorySize
      Environment:
        Variables:
          SOURCE_BUCKET: !Ref SourceBucket
          DESTINATION_BUCKET: !Ref DestinationBucket
          SOURCE_PREFIX: !Ref SourcePrefix
          DESTINATION_PREFIX: !Ref DestinationPrefix
          AWS_REGION: !Ref AWS::Region

  # Lambda Permission for S3
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunction
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub "arn:aws:s3:::${SourceBucket}"

  # S3 Bucket Notification Configuration
  SourceBucketNotification:
    Type: AWS::S3::BucketNotification
    Properties:
      Bucket: !Ref SourceBucket
      LambdaConfigurations:
        - Event: s3:ObjectCreated:*
          Function: !GetAtt LambdaFunction.Arn
          Filter:
            S3Key:
              Rules:
                - Name: prefix
                  Value: !Ref SourcePrefix

  # CloudWatch Log Group
  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaFunctionName}"
      RetentionInDays: 14

Outputs:
  SourceBucketName:
    Description: Name of the source S3 bucket
    Value: !Ref SourceBucket
    Export:
      Name: !Sub "${AWS::StackName}-SourceBucket"
  
  DestinationBucketName:
    Description: Name of the destination S3 bucket
    Value: !Ref DestinationBucket
    Export:
      Name: !Sub "${AWS::StackName}-DestinationBucket"
  
  LambdaFunctionName:
    Description: Name of the Lambda function
    Value: !Ref LambdaFunction
    Export:
      Name: !Sub "${AWS::StackName}-LambdaFunction"
  
  LambdaFunctionArn:
    Description: ARN of the Lambda function
    Value: !GetAtt LambdaFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}-LambdaFunctionArn"
  
  LambdaExecutionRoleArn:
    Description: ARN of the Lambda execution role
    Value: !GetAtt LambdaExecutionRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-LambdaExecutionRoleArn" 